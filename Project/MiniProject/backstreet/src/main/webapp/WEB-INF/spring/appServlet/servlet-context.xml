<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="my.spring.backstreet" />
	<context:component-scan base-package="vo" />
	<context:component-scan base-package="dao" />
	<context:component-scan base-package="service" />
	
	
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />
			<!-- 뉴스게시판 1단계 -->
	<!-- 멀티파트리졸버.. org.springfameWork.......얘가 미리 스프링컨테이너에 의해 빈객체로 생성되어 있어야 한다.
	이러고 파일브이오에 private MultipartFile uploadFile; 멀티파트형으로 객체를 넣어줘서 만들어준다.
	  -->
	  
	  
	  <!-- JDBC 연동 시작 --> 
<beans:bean id="dataSource" 
class="org.springframework.jdbc.datasource.DriverManagerDataSource">
<beans:property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
		<beans:property name="url" value="jdbc:oracle:thin:@localhost:1521:XE" />
		<beans:property name="username" value="flower" />
		<beans:property name="password" value="flower" />		
</beans:bean>
	
<beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">	
		<beans:property name="dataSource" ref="dataSource"/>
		<beans:property name="configLocation" 
			value="classpath:/resource/mybatis-config.xml"/>
		<beans:property name="mapperLocations" 
			value="classpath:/resource/*Mapper.xml"/>
</beans:bean> 

<beans:bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate"  
destroy-method="clearCache">
		<beans:constructor-arg index="0"  ref="sqlSessionFactory" />
</beans:bean> 
	  <!--jdbc 연동 끝 -->
	
	
</beans:beans>
